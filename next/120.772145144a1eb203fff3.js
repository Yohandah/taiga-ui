(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{OFrn:function(e,t,n){"use strict";n.r(t),n.d(t,"DialogsModule",(function(){return T}));var o=n("An66"),r=n("1VvW"),i=n("SVIu"),a=n("Qq0t"),p=n("dvRg"),s=n("kZht"),c=n("OZlg"),l=n("iyc4"),m=n("TLy2"),u=n("fmdS"),d=n("zV1d"),g=n("cweO");function v(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"div",4),s["\u0275\u0275element"](1,"tui-avatar",5),s["\u0275\u0275text"](2," \xabChoose wisely\xbb "),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("rounded",!0))}function f(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"div",4),s["\u0275\u0275element"](1,"tui-avatar",6),s["\u0275\u0275text"](2," \xabYou chose poorly\xbb "),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("rounded",!0))}function y(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"div",4),s["\u0275\u0275text"](1," \xabYou have chosen wisely\xbb "),s["\u0275\u0275element"](2,"tui-avatar",7),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](2),s["\u0275\u0275property"]("rounded",!0))}let h=(()=>{class e{constructor(e,t){this.alertService=e,this.promptService=t}onClick(e,t,n){this.promptService.open(e,{heading:"Taiga UI is the best",buttons:["Absolutely!","No way!"]}).pipe(Object(m.a)(e=>e?this.alertService.open(n,{status:"success"}):this.alertService.open(t,{status:"error"}))).subscribe()}}return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275directiveInject"](a.Y),s["\u0275\u0275directiveInject"](u.b))},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-dialogs-example-1"]],decls:8,vars:0,consts:[["tuiButton","",3,"click"],["choose",""],["poorly",""],["wisely",""],[1,"wrapper"],["avatarUrl","assets/images/choose.png","size","l",1,"tui-space_right-2",3,"rounded"],["avatarUrl","assets/images/poorly.png",1,"tui-space_right-2",3,"rounded"],["avatarUrl","assets/images/wisely.png",1,"tui-space_left-1",3,"rounded"]],template:function(e,t){if(1&e){const e=s["\u0275\u0275getCurrentView"]();s["\u0275\u0275elementStart"](0,"button",0),s["\u0275\u0275listener"]("click",(function(){s["\u0275\u0275restoreView"](e);const n=s["\u0275\u0275reference"](3),o=s["\u0275\u0275reference"](5),r=s["\u0275\u0275reference"](7);return t.onClick(n,o,r)})),s["\u0275\u0275text"](1," Show prompt\n"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275template"](2,v,3,1,"ng-template",null,1,s["\u0275\u0275templateRefExtractor"]),s["\u0275\u0275template"](4,f,3,1,"ng-template",null,2,s["\u0275\u0275templateRefExtractor"]),s["\u0275\u0275template"](6,y,3,1,"ng-template",null,3,s["\u0275\u0275templateRefExtractor"])}},directives:[d.a,g.a],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;align-items:center}"],changeDetection:0}),e})();const b=["header",$localize`:␟9d6e1408c0a40d04f5eeb6f5d16b8706aded4261␟8564515230059500750:Dialogs`];var x;x=$localize`:␟a961c44abe17a269b883d349b02e8226016895fd␟3463395013752872705: You can easily create your custom dialogs by extending our abstract class and providing your own component as a dialog. `;const P=["heading",$localize`:␟bd9aa8d13320476087ef2b67437c8078fbb05a07␟2620483019814878192:Custom dialog`];let w=(()=>{class e{constructor(){this.example1={TypeScript:"import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiAlertService, TuiNotification} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {switchMap} from 'rxjs/operators';\n\nimport {PromptService} from './prompt/prompt.service';\n\n@Component({\n    selector: 'tui-dialogs-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n})\nexport class TuiDialogsExample1 {\n    constructor(\n        @Inject(TuiAlertService)\n        private readonly alertService: TuiAlertService,\n        @Inject(PromptService) private readonly promptService: PromptService,\n    ) {}\n\n    onClick(\n        choose: PolymorpheusContent<any>,\n        poorly: PolymorpheusContent<any>,\n        wisely: PolymorpheusContent<any>,\n    ): void {\n        this.promptService\n            .open<unknown>(choose, {\n                heading: 'Taiga UI is the best',\n                buttons: ['Absolutely!', 'No way!'],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? this.alertService.open(wisely, {\n                              status: TuiNotification.Success,\n                          })\n                        : this.alertService.open(poorly, {\n                              status: TuiNotification.Error,\n                          }),\n                ),\n            )\n            .subscribe();\n    }\n}\n",HTML:'<button\n    tuiButton\n    (click)="onClick(choose, poorly, wisely)"\n>\n    Show prompt\n</button>\n<ng-template #choose>\n    <div class="wrapper">\n        <tui-avatar\n            avatarUrl="assets/images/choose.png"\n            size="l"\n            class="tui-space_right-2"\n            [rounded]="true"\n        ></tui-avatar>\n        \xabChoose wisely\xbb\n    </div>\n</ng-template>\n<ng-template #poorly>\n    <div class="wrapper">\n        <tui-avatar\n            avatarUrl="assets/images/poorly.png"\n            class="tui-space_right-2"\n            [rounded]="true"\n        ></tui-avatar>\n        \xabYou chose poorly\xbb\n    </div>\n</ng-template>\n<ng-template #wisely>\n    <div class="wrapper">\n        \xabYou have chosen wisely\xbb\n        <tui-avatar\n            avatarUrl="assets/images/wisely.png"\n            class="tui-space_left-1"\n            [rounded]="true"\n        ></tui-avatar>\n    </div>\n</ng-template>\n',LESS:".wrapper {\n    display: flex;\n    align-items: center;\n}\n","prompt/prompt.service.ts":"import {Injectable, Provider} from '@angular/core';\nimport {AbstractTuiDialogService, TUI_DIALOGS} from '@taiga-ui/cdk';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\n\nimport {PromptComponent} from './prompt.component';\nimport {PromptOptions} from './prompt-options';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PromptService extends AbstractTuiDialogService<PromptOptions> {\n    readonly defaultOptions = {\n        heading: 'Are you sure?',\n        buttons: ['Yes', 'No'],\n    } as const;\n\n    readonly component = new PolymorpheusComponent(PromptComponent);\n}\n\n// Add this provider to app module\nexport const PROMPT_PROVIDER: Provider = {\n    provide: TUI_DIALOGS,\n    useExisting: PromptService,\n    multi: true,\n};\n","prompt/prompt-options.ts":"export interface PromptOptions {\n    readonly heading: string;\n    readonly buttons: readonly [string, string];\n}\n","prompt/prompt.component.ts":"import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDialog} from '@taiga-ui/cdk';\nimport {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';\n\nimport {PromptOptions} from './prompt-options';\n\n@Component({\n    selector: 'prompt',\n    templateUrl: './prompt.template.html',\n    styleUrls: ['./prompt.style.less'],\n    changeDetection,\n})\nexport class PromptComponent {\n    // Here you get options + content + id + observer\n    constructor(\n        @Inject(POLYMORPHEUS_CONTEXT) readonly context: TuiDialog<PromptOptions, boolean>,\n    ) {}\n\n    onClick(response: boolean): void {\n        this.context.completeWith(response);\n    }\n}\n","prompt/prompt.template.html":'\x3c!-- Add id for accessibility purposes --\x3e\n<h2 [id]="context.id">{{ context.heading }}</h2>\n<section\n    polymorpheus-outlet\n    [content]="context.content"\n    [context]="context"\n></section>\n<p class="buttons">\n    <button\n        tuiButton\n        class="tui-space_right-3"\n        (click)="onClick(true)"\n    >\n        {{ context.buttons[0] }}\n    </button>\n    <button\n        tuiButton\n        appearance="secondary"\n        (click)="onClick(false)"\n    >\n        {{ context.buttons[1] }}\n    </button>\n</p>\n',"prompt/prompt.style.less":":host {\n    display: block;\n    padding: 1.5rem;\n    margin: auto;\n    border-radius: 0 0 0.75rem 0.75rem;\n    background: var(--tui-base-01);\n    box-shadow: inset 0 4px var(--tui-accent);\n    animation: tuiReveal var(--tui-duration), tuiFadeIn var(--tui-duration);\n}\n\n.buttons {\n    display: flex;\n    justify-content: center;\n    margin: 1.5rem 0 0;\n}\n","prompt/prompt.module.ts":"import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiButtonModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {PromptComponent} from './prompt.component';\nimport {PROMPT_PROVIDER} from './prompt.service';\n\n@NgModule({\n    imports: [TuiButtonModule, PolymorpheusModule, CommonModule],\n    // Add this provider to app module (it is here for stackblitz demonstration purpose only)\n    providers: [PROMPT_PROVIDER],\n    declarations: [PromptComponent],\n    exports: [PromptComponent],\n    entryComponents: [PromptComponent],\n})\nexport class PromptModule {}\n"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["dialogs"]],decls:7,vars:1,consts:[[6,"header"],["id","custom-dialog",3,"content",6,"heading"]],template:function(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"tui-doc-page",0),s["\u0275\u0275i18nAttributes"](1,b),s["\u0275\u0275elementStart"](2,"p"),s["\u0275\u0275i18n"](3,x),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](4,"tui-doc-example",1),s["\u0275\u0275i18nAttributes"](5,P),s["\u0275\u0275element"](6,"tui-dialogs-example-1"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](4),s["\u0275\u0275property"]("content",t.example1))},directives:[c.a,l.a,h],encapsulation:2,changeDetection:0}),e})();var S=n("cWK9");let C=(()=>{class e{}return e.\u0275mod=s["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=s["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},providers:[u.a],imports:[[a.ab,S.c,o.c]]}),e})(),T=(()=>{class e{}return e.\u0275mod=s["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=s["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[o.c,C,a.ab,p.z,i.j,r.f.forChild(Object(i.q)(w))]]}),e})()}}]);